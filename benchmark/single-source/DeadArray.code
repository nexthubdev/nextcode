//===--- DeadArray.swift --------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//

// rdar://problem/20980377
import TestsUtils

public let benchmarks =
  BenchmarkInfo(
    name: "DeadArray",
    runFunction: run_DeadArray,
    tags: [.regression, .unstable],
    legacyFactor: 200
  )

@inline(__always)
func debug(_ m:String) {}

private var count = 0

@inline(never)
func bar() { count += 1 }

@inline(never)
func runLoop(_ var1: Int, var2: Int) {
  for _ in 0..<500 {
    debug("Var1: \(var1) Var2: \(var2)")
    bar()
  }
}

@inline(never)
public func run_DeadArray(_ n: Int) {
  for _ in 1...n {
    count = 0
    runLoop(0, var2: 0)
  }
  check(count == 500)
}
